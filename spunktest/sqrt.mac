TITLE  .SQRT   TBALIB          08-20-75
;
        TWOSEG
        RELOC   ^O400000
;
;DOUBLE PRECISION SQUARE ROOT FUNCTION
;THIS ROUTINE CALCULATES THE SQUARE ROOT OF A DOUBLE PRECISION
;ARGUMENT BY DOING A LINEAR SINGLE PRECISION APPROXIMATION ON
;THE HIGH ORDER WORD, THEN TWO DOUBLE PRECISION ITERATIONS OF
;NEWTONS METHOD. THIS SHOULD GENERATE A RESULT ACCURATE TO
;20 DECIMAL SIGNIFICANT DIGITS. THE ALGORITHM IS AS FOLLOWS

;X = (2**(2N))*F, WHERE 1/2 < F < 1
;HENCE SQRT(X) = 2**N * SQRT(F)
;THE LINEAR APPROXIMATION IS OF THE FORM
;SQRT(F) = A2 - B2/(C2+F-D2/(E2+F))
;WHERE THE CONSTANTS A2,B2,C2,D2, AND E2 HAVE THE FOLLOWING
;VALUES

;CONSTANT	VALUE WHEN 0.25<F<0.50	VALUE WHEN 0.50<F<1.0
;A2		(5/14)*SQRT(70)		(5/7)*SQRT(35)
;B2		(50/49)*SQRT(70)	(200/49)*SQRT(35)
;C2		47/14			47/7
;D2		4/49			16/49
;E2		3/14			3/7



;THE CALLING SEQUENCE FOR THIS ROUTINE IS AS FOLLOWS:
;       PUSHJ   P,.SQRT
;       R1(,R2) = INPUT ARGUMENT
;       R3 = ARGUMENT TYPE
;       THE RESULT IS RETURNED IN R1,R2. RESULT TYPE DEPENDS ON
;       THE ARGUMENT TYPE.


        DCL     .SQRT,,<FSCSV,<N,2>,<ACSEF,2>>
        EXTERN  XCTBL1

        A=      0
        B=      1
        C=      2
        D=      3
        E=      4
        F=      5




        XCT     XCTBL1(3)       ;CHECK AND CONVERT ARGUMENT
        JRST    .+3             ;ENTER MAIN ROUTINE
        PUSHJ   17,.CSQRT       ;ENTER ROUTINE FOR COMPLEX CASE
        JRST    GOODBY          ;EXIT
        DMOVEM  E,ACSEF         ;SAVE SAME ACS
        DMOVE   A,B             ;GET D.P. ARG
        JUMPG   A, DSQRTP       ;ARGUMENT IS GREATER THAN 0
        JUMPE   A, DSQRT4       ;ARGUMENT OF ZERO?
        MATH  MFE2            ;ATTEMPT TO TAKE SQRT OF NEG. ARG.
        DMOVN   A,A             ;GET  ABS(ARG.)
DSQRTP: MOVE    F, A            ;GET SPARE COPY OF HIGH ORDER
        LSH     F, -33          ;GET RID OF FRACTION BITS
        SUBI    F, 201          ;GET RID OF THE BASE 200 PART OF
                                ;EXPONENT. EXTRA 1 IS A FUDGE.
        ROT     F, -1           ;CUT EXPONENT IN HALF, SAVE EXTRA
                                ;BIT    FOR LATER USE AS INDEX REG.
        HRRZM   F, FSCSV        ;SAVE REDUCED EXPONENT FOR SCALING
        LSH     F, -43          ;BRING BIT BACK - IF 0, THEN
                                ;1/4<F<1/2,OTHERWISE 1/2<F<1.
        TLZ     A, 777000       ;WIPE OUT EXPONENT BITS IN ARG.
        FSC     A, 177(F)       ;RESET IT TO EITHER 177 OR 200
        MOVE    D, A            ;PICK UP ANOTHER COPY OF NEW FRAC.
        FADR    D, E2(F)        ;FORM E2+F
        MOVN    C, D2(F)        ;PICK UP -D2
        FDVR    C, D            ;CALCULATE -D2/(E2+F)
        FADR    C, C2(F)        ;GET C2-D2/(E2+F)
        FADR    C, A            ;CALCULATE F+C2-D2/(E2+F)
        MOVN    D, B2(F)        ;PICK UP -B2
        FDVR    D, C            ;GET -B2/(F+C2-D2/(E2+F))
        FADR    D, A2(F)        ;GET FINAL FIRST APPROXIMATION
        MOVEI   E,0             ;LOW HALF OF 1ST APPROX. IS 0
        DMOVEM  A,N             ;SAVE DSQRT ARGUMENT
                                ;GET    N/X0
        DFDV    A,D
                                ;X0+N/X0
        DFAD    D,A

        FSC     D,-1            ;X1=.5*(X0+N/X0)
        DMOVE   A,N             ;GET N BACK
                                ;N/X1
        DFDV    A,D
                                ;X1+N/X1
        DFAD    A,D

DSQRT1: FSC     A, @FSCSV       ;SAVE RESULT, COUNT STORED FROME ABOVE
DSQRT3: DMOVE   E,ACSEF         ;RESTORE THE SAVED ACS
DSQRT4: DMOVE   B,A             ;RESULT IT R1,R2
GOODBY: RETURN  .SQRT           ;EXIT


A2:     202576362203            ;2.98807152
        203416346045            ;4.225771271
B2:     204421143713            ;8.537347194
        205602266310            ;24.14726441
C2:     202655555556            ;3.357142857
        203655555556            ;6.7142857143
D2:     175516274052            ;0.0816326531
        177516274052            ;0.326530612
E2:     176666666667            ;0.2142857143
        177666666667            ;0.4285714286



SUBTTL .CSQRT
;

;COMPLEX SQUARE ROOT FUNCTION

;THE ALGORITHM IS AS FOLLOWS:

;IF X >= 0 AND Y >= 0.,
;	A=SQRT((/X/+/X+IY/)/2)
;	B=Y/(2*A)

;IF X >= 0 AND Y < 0,
;	A=-SQRT((/X/+/X+IY/)/2)
;	B=Y/(2*A)

;IF X < 0 AND Y >= 0,
;	A=Y/(2*B)
;	B=SQRT((/X/+/X+IY/)/2)

;IF X < 0 AND Y < 0,
;	A=Y/(2*B)
;	B=SQRT((/X/+/X+IY/)/2)

;WHERE /Z/ MEANS THE ABSOLUTE VALUE OF Z.

;BECAUSE OF OVER/UNDERFLOW PROBLEMS, THE SQUARE
;ROOT TERM IS CALCULATED IN SEVERAL DIFFERENT WAYS.

;THE CALLING SEQUENCE IS:
;       PUSHJ   P,.CSQRT
;       R1,R2 = COMPLEX ARGUMENT

;THE REAL PART OF THE ANSWER IS RETURNED IN AC 1,
;AND THE IMAGINARY PART OF THE ANSWER IS RETURNED IN AC 2.

        DCL     .CSQRT,,<XSAVE,YSAVE,SAVE2,SAVE3,FLAGWD>
        EXTERN  RNDBL




        DMOVE   0,1             ;X TO R0,Y TO R1
        MOVM    2,0             ;/X/ TO AC 2.
                                ;IF     Y IS NOT ZERO,
        JUMPN   1,NORMAL        ;GO TO THE STANDARD ROUTINE.
                                ;IF     Y=0 AND X>=0, Z IS REAL,
        JUMPGE  0,REAL          ;SO TRANSFER TO SIMPLE CALC.
NORMAL: MOVEM   0,XSAVE         ;SAVE X.
        MOVEM   1,YSAVE         ;SAVE Y.
        MOVM    3,1             ;/Y/ TO AC 3.
        SETZM   FLAGWD          ;FLAGWD CONTAINS 0 IF /X/
        CAMLE   2,3             ;<= /Y/, O'E IT CONTAINS 1.  PUT
        AOSA    FLAGWD          ;THE LARGER OF /X/,/Y/ IN AC 2
        EXCH    2,3             ;AND THE SMALLER IN AC 3.
        FDVR    3,2             ;CALC S/L.
        JFCL                    ;NO UNDERFLOW ERROR MESSAGE ALLOWED.
        FMPR    3,3             ;CALC (S/L)**2.
        JFCL                    ;NO UNDERFLOW ERROR MESSAGE ALLOWED.
        FADRI   3,201400        ;HAVE (1+(S/L)**2) IN AC 3.
        MOVEM   2,SAVE2         ;SAVE R2
        CALL    .SQRT,<,$,3,,2> ;SQRT(1+(S/L)**2) = 1+EPS
        CALL    RNDBL           ;ROUND DOUBLE RESULT
        MOVE    0,1             ;MOVE RESULT TO R0
                                ;(1+(S/L)**2)=1+EPS.
        SKIPN   FLAGWD          ;GO TO YGTX IF
        JRST    YGTX            ;/Y/>/X/.
XGTY:   FADRI   0,201400        ;CALC. 2 + EPS.
        FDVRI   0,202400        ;CALC. (2+EPS)/2.
        MOVM    1,0             ;GET ABS(ABOVE)
        CALL    .SQRT,<,,,2>    ;SQRT(ABS(1+EPS/2))
        CALL    RNDBL           ;ROUND DOUBLE RESULT
        MOVEM   1,SAVE3         ;SAVE SQRT(1+EPS/2)
        CALL    .SQRT,<,$,SAVE2,,2>
        CALL    RNDBL           ;ROUND DOUBLE RESULT
        MOVE    0,1             ;MOVE RESULT TO R0
        FMPR    0,SAVE3         ;CALC. SQRT(/X/*(1+EPS/2)).
        JRST    OUT1            ;GO TO REST OF CALC.
YGTX:   MOVE    2,SAVE2         ;RESTORE R2
        CAMGE   2,[1.0]         ;IF /Y/>1, GO TO POSSIBLE OVERFLOW CASE.
        JRST    YXSMAL          ;O'E, GO TO POSSIBLE UNDERFLOW.
        FDVRI   0,203400        ;CALC. (1+EPS)/4.
        FMPR    2,0             ;CALC. /Y/*(1+EPS)/4.
        MOVM    3,XSAVE         ;/X/ TO AC 3.
        FDVRI   3,203400        ;CALC. /X//4.
        JFCL                    ;SUPPRESS UNDERFLOW ERROR MESSAGE.
        FADR    3,2             ;CALC.(/X//4)+(/Y/*(1+EPS)/4).
        CALL    .SQRT,<,$,3,,2> ;CALC. SQRT(ABOVE)
        CALL    RNDBL           ;ROUND DOUBLE RESULT
        MOVE    0,1             ;MOVE RESULT TO R0
        FMPR    0,SQ2           ;MULTIPLY IT BY SQRT(2).




OUT1:   MOVM    1,YSAVE         ;/Y/ TO AC 1.
        FDVR    1,0             ;CALC. /Y//2 TIMES THE
        FDVRI   1,202400        ;SQRT TERM.
        JRST    SIGNS           ;GO TO REST OF CALC.
YXSMAL: FMPR    0,2             ;/Y/*(1+EPS).
        MOVM    1,XSAVE         ;ABS(X) TO XSAVE
        FADR    1,0             ;CALC. /X/+/Y/*(1+EPS).
        CALL    .SQRT,<,,,2>    ;SQRT(ABOVE)
        CALL    RNDBL           ;ROUND DOUBLE RESULT
        MOVE    0,1             ;MOVE RESULT TO R0
        MOVEM   0,3             ;SAVE IT IN AC 3.
        FDVR    0,SQ2           ;DIVIDE IT BY THE SQRT(2).
        FMPR    3,SQ2           ;OR MULTIPLY IT BY SQRT(2).
        FDVR    2,3             ;THEN CALC /Y//THIS.
        MOVE    1,2             ;PUT A TEMP ANSWER IN AC 1.
SIGNS:  SKIPGE  XSAVE           ;SET UP THE REAL AND
        EXCH    1,0             ;THE IMAGINARY ANSWERS WITH
        SKIPGE  YSAVE           ;THE APPROPRIATE
        MOVNS   0,0             ;SIGNS.
        DMOVE   1,0             ;MOVE RESULT TO R1,R2
        JRST    DONE            ;EXIT

REAL:   CALL    .SQRT,<,$,2,,2> ;SQRT(X)
        CALL    RNDBL           ;ROUND DOUBLE RESULT
        SETZ    2,              ;IMAG PART OF ANSWER = 0
DONE:   RETURN  .CSQRT          ;EXIT


SQ2:    201552023632            ;SQRT(2).

        LIT

        END
  