        TITLE   CONF1
        TWOSEG
        RELOC   ^O400000
;
;  CONFORMALITY CHECKING ROUTINE FOR REEOPS, RAMUL, STRING E-BY-E ADD
;
        ENTRY   CONF1
        EXTERN  CONVRT,CVRTM,RDXMX
        EXTERN  ACL,ARL,BCL,BRL
        EXTERN  MSIZE,MULTYP,NSIZE,SCLFG,PLEN
        RADIX   10
;
        OPDEF   ERROR   [^O32B8]
;
;
        DCL     CONF1,<,OP1,OP2,OPTYP,RLTDS>,<T1,T2,T3,T4,CVREG>
;  .1.1,2
        HRRZ    6,.aloc(1)      ; /ALOC
        JUMPE   6,ERR15
        HRRZ    6,.aloc(2)      ; /ALOC
        JUMPE   6,ERR15
;  .1.3
        SETZM   SCLFG
        SETZM   CVRTM
        MOVE    8,4             ;RLTDS
;  .2
        JUMPGE  3,CONF14
;  .3                           ;BEGIN CMMUL
;  .3.0                         ;SET UP TEMPORARY VARIABLES
        HRRE    6,.bnd1(1)
        HLRE    7,.bnd1(1)
        MOVEM   7,T1
        SUBM    6,T1            ;T1 NOW HAS RH($(R1+3))-LH($(R1+3))
        HRRE    6,.bnd1(2)
        HLRE    7,.bnd1(2)
        MOVEM   7,T2
        SUBM    6,T2            ;T2 HAS RH($(R2+3))-LH($(R2+3))
        HRRE    6,.bnd2(1)
        HLRE    7,.bnd2(1)
        MOVEM   7,T3
        SUBM    6,T3            ;T3 HAS RH($(R1+4))-LH($(R1+4))
        HRRE   6,.bnd2(2)
        HLRE    7,.bnd2(2)
        MOVEM   7,T4
        SUBM    6,T4            ;T4 HAS RH($(R2+4))-LH($(R2+4))
;  .3.1
        HRRZ    4,.andim(1)     ;/ANDIM 1
        HRRZ    5,.andim(2)     ;/ANDIM 2
        CAIG    4,2
        CAILE   5,2
        JRST    CMUL18
        CAIE    4,2
        JRST    .+4
        CAIN    5,2
        JRST    CMUL15
        JRST    CMUL10
        CAIN    5,2
        JRST    CMUL5
;  .3.2
        MOVE    4,T1
        CAME    4,T2
;  .3.3
        JRST    ERR1
;  .3.4
        MOVEI   4,1
        MOVEM   4,SCLFG
        SETZM   MULTYP
        MOVE    4,T1
        MOVEM   4,PLEN
        HLRE    4,.bnd1(1)
        MOVEM   4,ACL
        HLRE    4,.bnd1(2)
        MOVEM   4,BRL
        JRST    CONF15          ;RETURN TO CONF1
;  .3.5
CMUL5:  SETZM   ,.aloc(8)
        SKIPN   T4
;  .3.6
        JRST    ERR2
;  .3.7
        MOVE    4,T4
        CAME    4,T1
;  .3.8
        JRST    ERR3
;  .3.9
        MOVE    4,T2
        ADDI    4,1
        HRLI    4,1
        MOVEM   4,.bnd1(8)
        MOVEI   4,1
        HRRM    4,.andim(8)     ;/ANDIM
        MOVE    5,T1
        MOVEM   5,PLEN
        MOVE    5,T2
        MOVEM   5,MSIZE
        HLRE    6,.bnd1(1)
        MOVEM   6,ACL
        HLRE    6,.bnd1(2)
        MOVEM   6,BCL
        HLRE    6,.bnd2(2)
        MOVEM   6,BRL
                                ;R4 STILL CONTAINS 1
        MOVEM   4,MULTYP
        JRST    CONF15          ;RETURN TO CONF1
;  .3.10
CMUL10: SETZM   ,.aloc(8)
        SKIPN   T2
;  .3.11
        JRST    ERR4
;  .3.12
        MOVE    4,T1
        CAME    4,T2
;  .3.13
        JRST    ERR5
;  .3.14
        MOVE    4,T3
        ADDI    4,1
        HRLI    4,1
        MOVEM   4,.bnd1(8)
        MOVEI   5,1
        HRRM    5,.andim(8)     ;/ANDIM
        MOVE    4,T1
        MOVEM   4,PLEN
        MOVE    4,T3
        MOVEM   4,NSIZE
        HLRE    5,.bnd1(1)
        MOVEM   5,ACL
        HLRE    5,.bnd2(1)
        MOVEM   5,ARL
        HLRE    4,.bnd1(2)
        MOVEM   4,BRL
        MOVEI   5,2
        MOVEM   5,MULTYP
        JRST    CONF15          ;RETURN TO CONF1
;  .3.15
CMUL15: SETZM   ,.aloc(8)
        MOVE    4,T1
        CAME    4,T4
;  .3.16
        JRST    ERR6
;  .3.17
        MOVE    5,T3
        ADDI    5,1
        HRLI    5,1
        MOVEM   5,.bnd2(8)
        MOVE    5,T2
        ADDI    5,1
        HRLI    5,1
        MOVEM   5,.bnd1(8)
        MOVEI   5,2
        HRRM    5,.andim(8)     ;/ANDIM
        MOVEM   4,PLEN          ;R4 STILL HAS T1 FROM .3.15!
        MOVE    4,T2
        MOVEM   4,MSIZE
        MOVE    4,T3
        MOVEM   4,NSIZE
        HLRE    5,.bnd1(1)
        MOVEM   5,ACL
        HLRE    5,.bnd2(1)
        MOVEM   5,ARL
        HLRE    5,.bnd1(2)
        MOVEM   5,BCL
        HLRE    5,.bnd2(2)
        MOVEM   5,BRL
        MOVEI   5,3
        MOVEM   5,MULTYP
        JRST    CONF15          ;RETURN TO CONF1
;  .3.18
CMUL18: JRST    ERR7
;  .4                           ;RE-ENTER CONF1
;  .4.1                         ;ENTER CEEOPS
CONF14: HRRZ    3,.andim(1)     ;/ANDIM 1
        HRRZ    4,.andim(2)     ;/ANDIM 2
        CAME    3,4
;  .4.2
        JRST    ERR8
;  .4.3
        MOVEI   4,3             ;R4 HAS NDX, R3 HAS LIM=$(R1)/ANDIM
;  .4.4
CEOP4:  MOVE    5,1             ;PUT CONTENTS OF R1 IN R5
        ADD     5,4             ;R5=R1+NDX
        HRRE    6,(5)           ;R6=RH($(R1+NDX))
        HLRE    0,(5)           ;R0=LH($(R1+NDX))
        SUB     6,0             ;R6=RH-LH
        MOVE    5,2             ;NOW PUT CONTENTS OF R2 IN R5
        ADD     5,4             ;R5=R2+NDX
        HRRE    7,(5)           ;R7=RH($(R2+NDX))
        HLRE    0,(5)           ;R0 NOW EQUALS LH($(R2+NDX))
        SUB     7,0             ;R7=RH-LH
        CAME    6,7
;  .4.5
        JRST    ERR9
;  .4.6
        AOBJN   6,.+1           ;INCREMENT BOTH HALVES OF R6
        MOVE    7,8
        ADD     7,4
        MOVEM   6,(7)           ;STORE IN RLTDS+NDX
;  .4.7
        ADDI    4,1             ;INCREMENT NDX
;  .4.8
        CAIGE   4,3(3)          ;NDX=>3+LIM?
        JRST    CEOP4
;  .4.9
        HRRM    3,.andim(8)
;  .5
CONF15: MOVE    3,OPTYP         ;OPTYP RE-ENTERED IN R3
        JUMPLE  3,CONF17
;  .6                           ;ENTER CEEPWR
;  .6.1
        HLRZ    4,.atyp(1)      ;/ATYP 0
        HLRZ    5,.atyp(2)      ;/ATYP 1
        CAMGE   4,5
;  .6.2
        JRST    ERR10
;  .6.3
        HRLM    4,.atyp(8)      ;R4 HAS $(R1)/ATYP
        JRST    CONF18          ;RETURN TO CONF1
;  .7
;  .7.1                         ;ENTER CTYPE
CONF17: HLRZ    4,.atyp(1)      ;/ATYP 0
        HLRZ    5,.atyp(2)      ;/ATYP 1
        CAME    4,5
        JRST    CTYP3
;  .7.2
        SKIPG   ,SCLFG
        HRLM    4,.atyp(8)      ;R4=$(R1)/ATYP IS STORED IN LH OF RLTDS+2
        JRST    CONF18
;  .7.3
CTYP3:  CAMG    4,5
        JRST    CTYP5
;  .7.4
        MOVE    1,2             ;R1 IS SAVED IN OP1; MOVE C(R2) TO R1
        MOVE    2,4             ;STORE $(R1)/ATYP IN R2
        MOVEI   6,2
        JRST    CTYP6
;  .7.5
CTYP5:  MOVE    2,5             ;R1="ARA"; $(R2)/ATYP="NT" IS STORED IN R2
        MOVEI   6,1
;  .7.6
CTYP6:  MOVEM   6,CVREG
        HRLM    2,.atyp(8)      ;NT=R2 IS STORED IN @RLTDS/ATYP
                                ;R1 IS SAVED IN OP1
                                ;R2 IS SAVED IN OP2
                                ;R3 IS SAVED IN OPTYP
;  .7.7
        CALL    CONVRT          ;"ARA" IS IN R1; "NT" IS IN R2
;  .7.8
        MOVEM   1,CVRTM
        MOVE    1,OP1           ;RESTORE R1,R2
        MOVE    2,OP2
;  .8                           ;RETURN TO CONF1
;  .8.1                         ;ENTER MKRSLT
CONF18: SKIPE   SCLFG
        JRST    MKRLT4
;       if were doing a reeops, make it integer, not logical
        MOVE    1,OPTYP
        JUMPN   1,CNF18A
        MOVE    1,RLTDS
        MOVEI   2,1
        SKIPN   .atyp(1)
        HRLM    2,.atyp(1)

;  .8.2
CNF18A: CALL    RDXMX,<,$,RLTDS,4095>       ;RLTDS IS PARAMETER IN R1
;  .8.3
        MOVE    1,OP1           ;RESTORE R1,R2
        MOVE    2,OP2
;  .8.4
MKRLT4: SKIPN   CVRTM
        JRST    CONF19
;  .8.5
        MOVE    R3,CVREG
        MOVE    R4,CVRTM
        MOVEM   R4,(R3)
;  .9
CONF19: RETURN  CONF1           ;END MKRSLT
                                ;END CONF1
;
;
;  ERROR EXITS
;
ERR1:   ERROR   ME1     ;ATTEMPT TO MULTIPLY VECTORS OF DIFFERING SIZES
ERR2:   ERROR   ME2     ;MATRIX NOT A ROW VECTOR IN VECTOR*MATRIX PRODUCT
ERR3:   ERROR   ME3     ;ELEMENTS IN VECTOR NOT EQUAL ROWS IN MATRIX
ERR4:   ERROR   ME4     ;MATRIX NOT A COLUMN VECTOR IN MATRIX*VECTOR PRODUCT
ERR5:   ERROR   ME5     ;ELEMENTS IN VECTOR NOT EQUAL COLUMNS IN MATRIX
ERR6:   ERROR   ME6     ;COL'S OF LEFT NOT EQUAL ROWS OF RIGHT IN MATRIX PRODUCT
ERR7:   ERROR   ME7     ;ATTEMPT TO MULTIPLY ARRAYS OF GREATER THAN TWO DIM'S
ERR8:   ERROR   ME8     ;ARRAYS DO NOT HAVE THE SAME NUMBER OF DIMENSIONS
ERR9:   ERROR   ME9     ;ARRAYS DO NOT HAVE SAME NUMBER OF ELEMENT IN
                        ;CORRESPONDING DIMENSIONS
ERR10:  ERROR   ME10    ;BASE AND POWER TYPES INCOMPATIBLE IN POWER OPERATION
ERR15:  ERROR   ME15    ;REFERENCE TO UNDECLARED ARRAY
;
;
        END
    